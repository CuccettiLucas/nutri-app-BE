// <auto-generated />
using System;
using App_Nutri.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace App_Nutri.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250106225207_UpdateTableUsuario")]
    partial class UpdateTableUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("App_Nutri.Models.Alimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Calorias")
                        .HasColumnType("float");

                    b.Property<double>("Carbohidratos")
                        .HasColumnType("float");

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Porcion")
                        .HasColumnType("float");

                    b.Property<double>("Proteinas")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Alimentos");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Calorias = 52.0,
                            Carbohidratos = 0.0,
                            Categoria = "Fruta",
                            Nombre = "Manzana",
                            Porcion = 0.0,
                            Proteinas = 0.0
                        },
                        new
                        {
                            Id = 3,
                            Calorias = 96.0,
                            Carbohidratos = 0.0,
                            Categoria = "Fruta",
                            Nombre = "Banana",
                            Porcion = 0.0,
                            Proteinas = 0.0
                        });
                });

            modelBuilder.Entity("App_Nutri.Models.AlimentoPaciente", b =>
                {
                    b.Property<int>("AlimentoId")
                        .HasColumnType("int");

                    b.Property<int>("PacienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("AlimentoId", "PacienteId");

                    b.HasIndex("PacienteId");

                    b.ToTable("AlimentoPaciente");
                });

            modelBuilder.Entity("App_Nutri.Models.ListaAlimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ListasAlimentos");
                });

            modelBuilder.Entity("App_Nutri.Models.ListaAlimentosAlimento", b =>
                {
                    b.Property<int>("ListaAlimentosId")
                        .HasColumnType("int");

                    b.Property<int>("AlimentoId")
                        .HasColumnType("int");

                    b.HasKey("ListaAlimentosId", "AlimentoId");

                    b.HasIndex("AlimentoId");

                    b.ToTable("ListaAlimentosAlimento");
                });

            modelBuilder.Entity("App_Nutri.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ListaAlimentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ListaAlimentoId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("App_Nutri.Models.RegistroAlimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlimentoId")
                        .HasColumnType("int");

                    b.Property<double>("Cantidad")
                        .HasColumnType("float");

                    b.Property<DateTime>("FechaConsumo")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AlimentoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("RegistrosAlimento");
                });

            modelBuilder.Entity("App_Nutri.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MatriculaMn")
                        .HasColumnType("int");

                    b.Property<int>("MatriculaMp")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("App_Nutri.Models.AlimentoPaciente", b =>
                {
                    b.HasOne("App_Nutri.Models.Alimento", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Nutri.Models.Paciente", "Paciente")
                        .WithMany()
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("App_Nutri.Models.ListaAlimentosAlimento", b =>
                {
                    b.HasOne("App_Nutri.Models.Alimento", "Alimento")
                        .WithMany("ListaAlimentosAlimentos")
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Nutri.Models.ListaAlimentos", "ListaAlimentos")
                        .WithMany("ListaAlimentosAlimentos")
                        .HasForeignKey("ListaAlimentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("ListaAlimentos");
                });

            modelBuilder.Entity("App_Nutri.Models.Paciente", b =>
                {
                    b.HasOne("App_Nutri.Models.ListaAlimentos", null)
                        .WithMany()
                        .HasForeignKey("ListaAlimentoId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("App_Nutri.Models.RegistroAlimento", b =>
                {
                    b.HasOne("App_Nutri.Models.Alimento", "Alimento")
                        .WithMany()
                        .HasForeignKey("AlimentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_Nutri.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alimento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("App_Nutri.Models.Alimento", b =>
                {
                    b.Navigation("ListaAlimentosAlimentos");
                });

            modelBuilder.Entity("App_Nutri.Models.ListaAlimentos", b =>
                {
                    b.Navigation("ListaAlimentosAlimentos");
                });
#pragma warning restore 612, 618
        }
    }
}
